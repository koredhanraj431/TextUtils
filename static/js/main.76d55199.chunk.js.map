{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","id","mode","href","title","type","about","placeholder","onClick","toggleMode","TextForm","useState","text","UpdateText","style","backgroundColor","color","heading","value","rows","onChange","event","console","log","document","getElementById","display","target","toUpperCase","showAlert","toLowerCase","newText","split","join","txt","select","setSelectionRange","navigator","clipboard","writeText","filter","element","length","readOnly","defaultProps","Alert","height","alert","role","message","App","setmode","setAlert","setTimeout","innerHTML","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.76d55199.chunk.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n// import { Link } from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <nav\r\n        id=\"nav\"\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand text-primary\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          {/* <Link className=\"navbar-brand text-primary\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item px-3\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n              </li>\r\n              <li className=\"nav-item px-3\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  {props.about}\r\n                </a>\r\n                {/* <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/about\"\r\n                >\r\n                  {props.about}\r\n                </Link> */}\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n              <span\r\n                className=\"btn text mx-3\"\r\n                id=\"toggle-switch\"\r\n                onClick={props.toggleMode}\r\n                title=\"Enable Dark props.mode\"\r\n              >\r\n                <i className=\"fas fa-moon\" id=\"toggle-switch\"></i>\r\n              </span>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n//props : properties of component\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"TextUtils\",\r\n  about: \"About\",\r\n}\r\n","import React, { useState } from \"react\"\r\n\r\nexport default function TextForm(props) {\r\n  // const [InputText, UpdateInputText] = useState(\"\")\r\n  const [text, UpdateText] = useState(\"\")\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On change\")\r\n    document.getElementById(\"previewText\").style.display = \"block\"\r\n    // UpdateInputText(event.target.value)\r\n    UpdateText(event.target.value)\r\n  }\r\n\r\n  const ConvertToUppercase = () => {\r\n    console.log(\"Uppercase\")\r\n    UpdateText(text.toUpperCase())\r\n    props.showAlert(\"Text has been converted to Uppercase\", \"success\")\r\n  }\r\n  const ConvertToLowercase = () => {\r\n    console.log(\"Lowercase\")\r\n    UpdateText(text.toLowerCase())\r\n    props.showAlert(\"Text has been converted to lowercase\", \"success\")\r\n  }\r\n  const RemoveExtraSpaces = () => {\r\n    console.log(\"RemoveExtraSpaces\")\r\n    let newText = text.split(/[ ]+/)\r\n    UpdateText(newText.join(\" \"))\r\n    props.showAlert(\"Extra spaces has been removed\", \"success\")\r\n  }\r\n  const CopyToClipboard = () => {\r\n    console.log(\"CopyToClipboard\")\r\n    var txt = document.getElementById(\"InputText\")\r\n    // @ts-ignore\r\n    txt.select()\r\n    // @ts-ignore\r\n    txt.setSelectionRange(0, 9999)\r\n    // @ts-ignore\r\n    navigator.clipboard.writeText(txt.value)\r\n    props.showAlert(\"Text has been copied to clipboard\", \"success\")\r\n  }\r\n  const reset = () => {\r\n    console.log(\"Reset\")\r\n    document.getElementById(\"previewText\").style.display = \"none\"\r\n    UpdateText(\"\")\r\n    props.showAlert(\"Text has been reset\", \"success\")\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: props.mode === \"light\" ? \"#f8f9fa\" : \"#212529\",\r\n        color: props.mode === \"dark\" ? \"#f8f9fa\" : \"#212529\",\r\n      }}\r\n    >\r\n      <div className=\"form-group mt-4\">\r\n        <h3 className=\"text-primary\">{props.heading}</h3>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"InputText\"\r\n          value={text}\r\n          // @ts-ignore\r\n          rows=\"8\"\r\n          onChange={handleOnChange}\r\n        ></textarea>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary m-3\"\r\n          onClick={ConvertToUppercase}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary m-3\"\r\n          onClick={ConvertToLowercase}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary m-3\"\r\n          onClick={RemoveExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary m-3\"\r\n          onClick={CopyToClipboard}\r\n        >\r\n          Copy to Clipboard\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-danger m-3\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h4>Your text summary </h4>\r\n        <p>\r\n          {/* Total {text.length > 0 ? text.trim().split(/[ \\n]+/).length : 0}{\" \"} */}\r\n          Total{\" \"}\r\n          {\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0\r\n            }).length\r\n          }{\" \"}\r\n          words, {text.length} characters,{\" \"}\r\n          {text.length > 0 ? text.split(\"\\n\").length : 0} lines\r\n        </p>\r\n        <p>\r\n          Article is approximately{\" \"}\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0\r\n            }).length}{\" \"}\r\n          Minutes to read\r\n        </p>\r\n        <h4>Preview here </h4>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"previewText\"\r\n          value={text}\r\n          // @ts-ignore\r\n          rows=\"8\"\r\n          readOnly\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`container mx-auto alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>Success </strong> &nbsp;\r\n          {props.alert.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\"\nimport Navbar from \"./components/Navbar\"\nimport TextForm from \"./components/TextForm\"\nimport React, { useState } from \"react\"\nimport Alert from \"./components/Alert\"\n// import About from \"./components/About\"\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500)\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\")\n      document.getElementById(\"toggle-switch\").innerHTML =\n        '<i class=\"fas fa-moon text-light\"></i>'\n      document.getElementById(\"toggle-switch\").title = \"Enable Light mode\"\n      document.body.style.backgroundColor = \"#212529\"\n      showAlert(\"Dark mode has been Enabled\", \"success\")\n    } else {\n      setmode(\"light\")\n      document.getElementById(\"toggle-switch\").innerHTML =\n        '<i class=\"fas fa-sun text-dark\"></i>'\n      document.getElementById(\"toggle-switch\").title = \"Enable Dark mode\"\n      document.body.style.backgroundColor = \"#f8f9fa\"\n      showAlert(\"Light mode has been Enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        about=\"About\"\n        // @ts-ignore\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container textarea\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/\"> */}\n        <TextForm\n          heading=\"Enter text to Analyze : \"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* </Route> */}\n        {/* <Route exact path=\"/about\"> */}\n        {/* <About heading=\"About Us\" mode={mode} /> */}\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}